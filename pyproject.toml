[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "context-server"
version = "0.1.0"
description = "Local, containerized documentation RAG system with MCP integration"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "httpx>=0.25.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "docling>=2.0.0",
    "docling-core>=2.0.0",
    "docling-parse>=3.0.0",
    "crawl4ai>=0.4.0",
    "asyncpg>=0.29.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "pgvector>=0.2.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.1.0",
    "click>=8.1.0",
    "gitpython>=3.1.0",
    "openai>=1.0.0",
    "numpy>=1.24.0",
    "python-multipart>=0.0.6",
    "rich>=13.0.0",
    "pyyaml>=6.0",
    "docker>=6.0.0",
    "mcp>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-watch>=4.2.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.6.0",
    "types-requests>=2.31.0",
    "bandit>=1.7.5",
    "pre-commit>=3.5.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "factory-boy>=3.3.0",
]

[project.scripts]
context-server = "context_server.cli.main:cli"
ctx = "context_server.cli.main:cli"
context-server-mcp = "context_server.mcp_server.main:cli_main"

[tool.hatch.build.targets.wheel]
packages = ["context_server"]


[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["context_server"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
